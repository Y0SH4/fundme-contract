{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc805e16f1350d70c3e650be17b4d9fad5b86cbcca7c607708d326d2e855c1e94",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1007516",
    "logsBloom": "0x
    "blockHash": "0x695b83f70d0354b8ce770a49f9d8a2464fa4ee5beb78e687e6d188f12ff68ad8",
    "transactionHash": "0xc805e16f1350d70c3e650be17b4d9fad5b86cbcca7c607708d326d2e855c1e94",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1007516",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "0a0d9ba620084de694047503acfd2cee",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Y0SH4\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract was created to make a donation to me :D\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\n// Uncomment this line to use console.log\\n// import \\\"hardhat/console.sol\\\";\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/** @title A contract for crowd funding\\n *  @author Y0SH4\\n *  @notice This contract was created to make a donation to me :D\\n */\\n\\ncontract FundMe {\\n  using PriceConverter for uint256;\\n\\n  mapping(address => uint256) private s_addressToAmountFunded;\\n  address[] private s_funders;\\n\\n  // Could we make this constant?  /* hint: no! We should make it immutable! */\\n  address private immutable i_owner;\\n  uint256 public constant MINIMUM_USD = 50 * 10**18;\\n\\n  AggregatorV3Interface public s_priceFeed;\\n\\n  modifier onlyOwner() {\\n    // require(msg.sender == owner);\\n    if (msg.sender != i_owner) revert FundMe__NotOwner();\\n    _;\\n  }\\n\\n  constructor(address priceFeedAddress) {\\n    i_owner = msg.sender;\\n    s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n  }\\n\\n  receive() external payable {\\n    fund();\\n  }\\n\\n  fallback() external payable {\\n    fund();\\n  }\\n\\n  function fund() public payable {\\n    require(\\n      msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n      \\\"You need to spend more ETH!\\\"\\n    );\\n    // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n    s_addressToAmountFunded[msg.sender] += msg.value;\\n    s_funders.push(msg.sender);\\n  }\\n\\n  // function getVersion() public view returns (uint256){\\n  //     // ETH/USD price feed address of Goerli Network.\\n  //     AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\n  //     return priceFeed.version();\\n  // }\\n\\n  function withdraw() public onlyOwner {\\n    for (\\n      uint256 funderIndex = 0;\\n      funderIndex < s_funders.length;\\n      funderIndex++\\n    ) {\\n      address funder = s_funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n    // // transfer\\n    // payable(msg.sender).transfer(address(this).balance);\\n    // // send\\n    // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n    // require(sendSuccess, \\\"Send failed\\\");\\n    // call\\n    (bool callSuccess, ) = payable(msg.sender).call{\\n      value: address(this).balance\\n    }(\\\"\\\");\\n    require(callSuccess, \\\"Call failed\\\");\\n  }\\n\\n  function cheaperWithdraw() public payable onlyOwner {\\n    address[] memory funders = s_funders;\\n    for (\\n      uint256 funderIndex = 0;\\n      funderIndex < s_funders.length;\\n      funderIndex++\\n    ) {\\n      address funder = funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n    (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n    require(success);\\n  }\\n\\n  function getOwner() public view returns (address) {\\n    return i_owner;\\n  }\\n\\n  function getFunder(uint256 index) public view returns (address) {\\n    return s_funders[index];\\n  }\\n\\n  function getAddressToAmountFunded(address funder)\\n    public\\n    view\\n    returns (uint256)\\n  {\\n    return s_addressToAmountFunded[funder];\\n  }\\n\\n  function getPriceFeed() public view returns (AggregatorV3Interface) {\\n    return s_priceFeed;\\n  }\\n}\\n\",\"keccak256\":\"0x16989a09ff2e6c95883e4a209e2bc8eeb55ae3187835a0e4edfcd11a3a6711a5\",\"license\":\"UNLICENSED\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) { \\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x0ad22ddabc33efa83b708ff82f4e9ac21f1748ca606c01603b11ed4394b4c96e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200125a3803806200125a83398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b6080516110da620001806000396000818161039e015281816105ed0152818161063d015261083701526110da6000f3fe60806040526004361061008a5760003560e01c8063893d20e811610059578063893d20e81461014d5780639e87a5cd14610178578063b60d4288146101a3578063be2693f0146101ad578063d7b4750c146101b757610099565b80630343fb25146100a35780630ec3b027146100e05780633ccfd60b1461010b5780636b69a5921461012257610099565b36610099576100976101f4565b005b6100a16101f4565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610aec565b61032e565b6040516100d79190610b32565b60405180910390f35b3480156100ec57600080fd5b506100f5610376565b6040516101029190610bac565b60405180910390f35b34801561011757600080fd5b5061012061039c565b005b34801561012e57600080fd5b506101376105dc565b6040516101449190610b32565b60405180910390f35b34801561015957600080fd5b506101626105e9565b60405161016f9190610bd6565b60405180910390f35b34801561018457600080fd5b5061018d610611565b60405161019a9190610bac565b60405180910390f35b6101ab6101f4565b005b6101b561063b565b005b3480156101c357600080fd5b506101de60048036038101906101d99190610c1d565b6108cd565b6040516101eb9190610bd6565b60405180910390f35b6802b5e3af16b1880000610233600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461091590919063ffffffff16565b1015610274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026b90610ca7565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102c29190610cf6565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610421576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104cc5760006001828154811061044757610446610d2a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104c490610d59565b915050610424565b50600067ffffffffffffffff8111156104e8576104e7610da1565b5b6040519080825280602002602001820160405280156105165781602001602082028036833780820191505090505b506001908051906020019061052c9291906109e2565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161055390610e01565b60006040518083038185875af1925050503d8060008114610590576040519150601f19603f3d011682016040523d82523d6000602084013e610595565b606091505b50509050806105d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d090610e62565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106c0576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561074457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106fa575b5050505050905060005b6001805490508110156107d25760008282815181106107705761076f610d2a565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107ca90610d59565b91505061074e565b50600067ffffffffffffffff8111156107ee576107ed610da1565b5b60405190808252806020026020018201604052801561081c5781602001602082028036833780820191505090505b50600190805190602001906108329291906109e2565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161087990610e01565b60006040518083038185875af1925050503d80600081146108b6576040519150601f19603f3d011682016040523d82523d6000602084013e6108bb565b606091505b50509050806108c957600080fd5b5050565b6000600182815481106108e3576108e2610d2a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061092183610951565b90506000670de0b6b3a7640000858361093a9190610e82565b6109449190610ef3565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561099f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c39190610fb1565b5050509150506402540be400816109da919061102c565b915050919050565b828054828255906000526020600020908101928215610a5b579160200282015b82811115610a5a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a02565b5b509050610a689190610a6c565b5090565b5b80821115610a85576000816000905550600101610a6d565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ab982610a8e565b9050919050565b610ac981610aae565b8114610ad457600080fd5b50565b600081359050610ae681610ac0565b92915050565b600060208284031215610b0257610b01610a89565b5b6000610b1084828501610ad7565b91505092915050565b6000819050919050565b610b2c81610b19565b82525050565b6000602082019050610b476000830184610b23565b92915050565b6000819050919050565b6000610b72610b6d610b6884610a8e565b610b4d565b610a8e565b9050919050565b6000610b8482610b57565b9050919050565b6000610b9682610b79565b9050919050565b610ba681610b8b565b82525050565b6000602082019050610bc16000830184610b9d565b92915050565b610bd081610aae565b82525050565b6000602082019050610beb6000830184610bc7565b92915050565b610bfa81610b19565b8114610c0557600080fd5b50565b600081359050610c1781610bf1565b92915050565b600060208284031215610c3357610c32610a89565b5b6000610c4184828501610c08565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c91601b83610c4a565b9150610c9c82610c5b565b602082019050919050565b60006020820190508181036000830152610cc081610c84565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d0182610b19565b9150610d0c83610b19565b9250828201905080821115610d2457610d23610cc7565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d6482610b19565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d9657610d95610cc7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610deb600083610dd0565b9150610df682610ddb565b600082019050919050565b6000610e0c82610dde565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e4c600b83610c4a565b9150610e5782610e16565b602082019050919050565b60006020820190508181036000830152610e7b81610e3f565b9050919050565b6000610e8d82610b19565b9150610e9883610b19565b9250828202610ea681610b19565b91508282048414831517610ebd57610ebc610cc7565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610efe82610b19565b9150610f0983610b19565b925082610f1957610f18610ec4565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f4381610f24565b8114610f4e57600080fd5b50565b600081519050610f6081610f3a565b92915050565b6000819050919050565b610f7981610f66565b8114610f8457600080fd5b50565b600081519050610f9681610f70565b92915050565b600081519050610fab81610bf1565b92915050565b600080600080600060a08688031215610fcd57610fcc610a89565b5b6000610fdb88828901610f51565b9550506020610fec88828901610f87565b9450506040610ffd88828901610f9c565b935050606061100e88828901610f9c565b925050608061101f88828901610f51565b9150509295509295909350565b600061103782610f66565b915061104283610f66565b925082820261105081610f66565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561108857611087610cc7565b5b828205841483151761109d5761109c610cc7565b5b509291505056fea2646970667358221220db67667cb9764297f9ced6c5d71390923fc802e026af611c7118bda71da16c0864736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c8063893d20e811610059578063893d20e81461014d5780639e87a5cd14610178578063b60d4288146101a3578063be2693f0146101ad578063d7b4750c146101b757610099565b80630343fb25146100a35780630ec3b027146100e05780633ccfd60b1461010b5780636b69a5921461012257610099565b36610099576100976101f4565b005b6100a16101f4565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610aec565b61032e565b6040516100d79190610b32565b60405180910390f35b3480156100ec57600080fd5b506100f5610376565b6040516101029190610bac565b60405180910390f35b34801561011757600080fd5b5061012061039c565b005b34801561012e57600080fd5b506101376105dc565b6040516101449190610b32565b60405180910390f35b34801561015957600080fd5b506101626105e9565b60405161016f9190610bd6565b60405180910390f35b34801561018457600080fd5b5061018d610611565b60405161019a9190610bac565b60405180910390f35b6101ab6101f4565b005b6101b561063b565b005b3480156101c357600080fd5b506101de60048036038101906101d99190610c1d565b6108cd565b6040516101eb9190610bd6565b60405180910390f35b6802b5e3af16b1880000610233600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461091590919063ffffffff16565b1015610274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026b90610ca7565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102c29190610cf6565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610421576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104cc5760006001828154811061044757610446610d2a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104c490610d59565b915050610424565b50600067ffffffffffffffff8111156104e8576104e7610da1565b5b6040519080825280602002602001820160405280156105165781602001602082028036833780820191505090505b506001908051906020019061052c9291906109e2565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161055390610e01565b60006040518083038185875af1925050503d8060008114610590576040519150601f19603f3d011682016040523d82523d6000602084013e610595565b606091505b50509050806105d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d090610e62565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106c0576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561074457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106fa575b5050505050905060005b6001805490508110156107d25760008282815181106107705761076f610d2a565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107ca90610d59565b91505061074e565b50600067ffffffffffffffff8111156107ee576107ed610da1565b5b60405190808252806020026020018201604052801561081c5781602001602082028036833780820191505090505b50600190805190602001906108329291906109e2565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161087990610e01565b60006040518083038185875af1925050503d80600081146108b6576040519150601f19603f3d011682016040523d82523d6000602084013e6108bb565b606091505b50509050806108c957600080fd5b5050565b6000600182815481106108e3576108e2610d2a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061092183610951565b90506000670de0b6b3a7640000858361093a9190610e82565b6109449190610ef3565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561099f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c39190610fb1565b5050509150506402540be400816109da919061102c565b915050919050565b828054828255906000526020600020908101928215610a5b579160200282015b82811115610a5a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a02565b5b509050610a689190610a6c565b5090565b5b80821115610a85576000816000905550600101610a6d565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ab982610a8e565b9050919050565b610ac981610aae565b8114610ad457600080fd5b50565b600081359050610ae681610ac0565b92915050565b600060208284031215610b0257610b01610a89565b5b6000610b1084828501610ad7565b91505092915050565b6000819050919050565b610b2c81610b19565b82525050565b6000602082019050610b476000830184610b23565b92915050565b6000819050919050565b6000610b72610b6d610b6884610a8e565b610b4d565b610a8e565b9050919050565b6000610b8482610b57565b9050919050565b6000610b9682610b79565b9050919050565b610ba681610b8b565b82525050565b6000602082019050610bc16000830184610b9d565b92915050565b610bd081610aae565b82525050565b6000602082019050610beb6000830184610bc7565b92915050565b610bfa81610b19565b8114610c0557600080fd5b50565b600081359050610c1781610bf1565b92915050565b600060208284031215610c3357610c32610a89565b5b6000610c4184828501610c08565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c91601b83610c4a565b9150610c9c82610c5b565b602082019050919050565b60006020820190508181036000830152610cc081610c84565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d0182610b19565b9150610d0c83610b19565b9250828201905080821115610d2457610d23610cc7565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d6482610b19565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d9657610d95610cc7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610deb600083610dd0565b9150610df682610ddb565b600082019050919050565b6000610e0c82610dde565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e4c600b83610c4a565b9150610e5782610e16565b602082019050919050565b60006020820190508181036000830152610e7b81610e3f565b9050919050565b6000610e8d82610b19565b9150610e9883610b19565b9250828202610ea681610b19565b91508282048414831517610ebd57610ebc610cc7565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610efe82610b19565b9150610f0983610b19565b925082610f1957610f18610ec4565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f4381610f24565b8114610f4e57600080fd5b50565b600081519050610f6081610f3a565b92915050565b6000819050919050565b610f7981610f66565b8114610f8457600080fd5b50565b600081519050610f9681610f70565b92915050565b600081519050610fab81610bf1565b92915050565b600080600080600060a08688031215610fcd57610fcc610a89565b5b6000610fdb88828901610f51565b9550506020610fec88828901610f87565b9450506040610ffd88828901610f9c565b935050606061100e88828901610f9c565b925050608061101f88828901610f51565b9150509295509295909350565b600061103782610f66565b915061104283610f66565b925082820261105081610f66565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561108857611087610cc7565b5b828205841483151761109d5761109c610cc7565b5b509291505056fea2646970667358221220db67667cb9764297f9ced6c5d71390923fc802e026af611c7118bda71da16c0864736f6c63430008110033",
  "devdoc": {
    "author": "Y0SH4",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract was created to make a donation to me :D",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}